# -*- coding: utf-8 -*-
import json
import os

import requests
# Form implementation generated from reading ui file 'vdown.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from bilix.sites.bilibili import DownloaderBilibili
from bilix.sites.hanime1 import DownloaderHanime1
from bilix.sites.youtube import DownloaderYoutube

import asyncio
from ftplib import FTP

class Ui_Vdown(object):
    def setupUi(self, Vdown):
        Vdown.setObjectName("Vdown")
        Vdown.resize(846, 746)
        self.gridLayout_13 = QtWidgets.QGridLayout(Vdown)
        self.gridLayout_13.setObjectName("gridLayout_13")
        self.CommonBox = QtWidgets.QGridLayout()
        self.CommonBox.setContentsMargins(16, 45, 16, 16)
        self.CommonBox.setSpacing(16)
        self.CommonBox.setObjectName("CommonBox")
        self.AudioParmsBox = QtWidgets.QGridLayout()
        self.AudioParmsBox.setObjectName("AudioParmsBox")
        self.AudioParmsTitle = SubtitleLabel(Vdown)
        self.AudioParmsTitle.setMaximumSize(QtCore.QSize(16777215, 25))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(15)
        font.setBold(True)
        self.AudioParmsTitle.setFont(font)
        self.AudioParmsTitle.setObjectName("AudioParmsTitle")
        self.AudioParmsBox.addWidget(self.AudioParmsTitle, 0, 0, 1, 1)
        self.AudioParmsCard = SimpleCardWidget(Vdown)
        self.AudioParmsCard.setMinimumSize(QtCore.QSize(380, 250))
        self.AudioParmsCard.setMaximumSize(QtCore.QSize(300, 250))
        self.AudioParmsCard.setObjectName("AudioParmsCard")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.AudioParmsCard)
        self.horizontalLayout.setContentsMargins(16, 16, 16, 16)
        self.horizontalLayout.setSpacing(16)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout()
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.StrongBodyLabel_11 = StrongBodyLabel(self.AudioParmsCard)
        self.StrongBodyLabel_11.setObjectName("StrongBodyLabel11")
        self.verticalLayout_2.addWidget(self.StrongBodyLabel_11)
        self.LineEdit_2 = LineEdit(self.AudioParmsCard)
        self.LineEdit_2.setObjectName("LineEdit_2")
        self.verticalLayout_2.addWidget(self.LineEdit_2)
        self.StrongBodyLabel_10 = StrongBodyLabel(self.AudioParmsCard)
        self.StrongBodyLabel_10.setObjectName("StrongBodyLabel10")
        self.verticalLayout_2.addWidget(self.StrongBodyLabel_10)
        self.LineEdit_4 = LineEdit(self.AudioParmsCard)
        self.LineEdit_4.setObjectName("LineEdit_4")
        self.verticalLayout_2.addWidget(self.LineEdit_4)
        self.PrimaryPushButton = PrimaryPushButton(self.AudioParmsCard)
        self.PrimaryPushButton.setObjectName("PrimaryPushButton")
        self.verticalLayout_2.addWidget(self.PrimaryPushButton)
        self.StrongBodyLabel_5 = StrongBodyLabel(self.AudioParmsCard)
        self.StrongBodyLabel_5.setMaximumSize(QtCore.QSize(16777215, 40))
        self.StrongBodyLabel_5.setObjectName("StrongBodyLabel_5")
        self.verticalLayout_2.addWidget(self.StrongBodyLabel_5)
        self.horizontalLayout.addLayout(self.verticalLayout_2)
        self.AudioParmsBox.addWidget(self.AudioParmsCard, 1, 0, 1, 1)
        self.CommonBox.addLayout(self.AudioParmsBox, 3, 1, 1, 1)
        self.VideoClipCard = SimpleCardWidget(Vdown)
        self.VideoClipCard.setMinimumSize(QtCore.QSize(0, 230))
        self.VideoClipCard.setMaximumSize(QtCore.QSize(16777215, 200))
        self.VideoClipCard.setObjectName("VideoClipCard")
        self.gridLayout_10 = QtWidgets.QGridLayout(self.VideoClipCard)
        self.gridLayout_10.setObjectName("gridLayout_10")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout()
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.StrongBodyLabel = StrongBodyLabel(self.VideoClipCard)
        self.StrongBodyLabel.setMinimumSize(QtCore.QSize(380, 0))
        self.StrongBodyLabel.setMaximumSize(QtCore.QSize(16777215, 30))
        self.StrongBodyLabel.setObjectName("StrongBodyLabel")
        self.verticalLayout_4.addWidget(self.StrongBodyLabel)
        self.StrongBodyLabel_7 = StrongBodyLabel(self.VideoClipCard)
        self.StrongBodyLabel_7.setMinimumSize(QtCore.QSize(380, 0))
        self.StrongBodyLabel_7.setMaximumSize(QtCore.QSize(16777215, 30))
        self.StrongBodyLabel_7.setObjectName("StrongBodyLabel_7")
        self.verticalLayout_4.addWidget(self.StrongBodyLabel_7)
        self.PrimaryPushButton_5 = PrimaryPushButton(self.VideoClipCard)
        self.PrimaryPushButton_5.setMaximumSize(QtCore.QSize(16777215, 32))
        self.PrimaryPushButton_5.setObjectName("PrimaryPushButton_5")
        self.verticalLayout_4.addWidget(self.PrimaryPushButton_5)
        self.gridLayout_10.addLayout(self.verticalLayout_4, 1, 1, 1, 1)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout()
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.StrongBodyLabel_2 = StrongBodyLabel(self.VideoClipCard)
        self.StrongBodyLabel_2.setObjectName("StrongBodyLabel_2")
        self.verticalLayout_3.addWidget(self.StrongBodyLabel_2)
        self.ComboBox_2 = ComboBox(self.VideoClipCard)
        self.ComboBox_2.setMaximumSize(QtCore.QSize(340, 16777215))
        self.ComboBox_2.setObjectName("ComboBox_2")
        self.verticalLayout_3.addWidget(self.ComboBox_2)
        self.StrongBodyLabel_3 = StrongBodyLabel(self.VideoClipCard)
        self.StrongBodyLabel_3.setObjectName("StrongBodyLabel_3")
        self.verticalLayout_3.addWidget(self.StrongBodyLabel_3)

        self.SearchLineEdit_2 = SearchLineEdit(self.VideoClipCard)
        self.SearchLineEdit_2.setMaximumSize(QtCore.QSize(340, 33))
        self.SearchLineEdit_2.setObjectName("SearchLineEdit_2")
        self.verticalLayout_3.addWidget(self.SearchLineEdit_2)


        self.PrimaryPushButton_3 = PrimaryPushButton(self.VideoClipCard)
        self.PrimaryPushButton_3.setMaximumSize(QtCore.QSize(16777215, 32))
        self.PrimaryPushButton_3.setObjectName("PrimaryPushButton_3")
        self.verticalLayout_3.addWidget(self.PrimaryPushButton_3)
        self.StrongBodyLabel_6=StrongBodyLabel(self.VideoClipCard)
        self.StrongBodyLabel_6.setObjectName("StrongBodyLabel_6")
        self.verticalLayout_3.addWidget(self.StrongBodyLabel_6)
        self.horizontalLayout_2.addLayout(self.verticalLayout_3)
        self.gridLayout_10.addLayout(self.horizontalLayout_2, 1, 0, 1, 1)
        self.CommonBox.addWidget(self.VideoClipCard, 2, 0, 1, 2)
        self.VideoClipLabel = SubtitleLabel(Vdown)
        self.VideoClipLabel.setMinimumSize(QtCore.QSize(0, 25))
        self.VideoClipLabel.setMaximumSize(QtCore.QSize(16777215, 20))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(15)
        font.setBold(True)
        self.VideoClipLabel.setFont(font)
        self.VideoClipLabel.setObjectName("VideoClipLabel")
        self.CommonBox.addWidget(self.VideoClipLabel, 1, 0, 1, 1)
        self.CommonTitile = LargeTitleLabel(Vdown)
        self.CommonTitile.setMaximumSize(QtCore.QSize(16777215, 45))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(30)
        font.setBold(True)
        font.setKerning(True)
        self.CommonTitile.setFont(font)
        self.CommonTitile.setObjectName("CommonTitile")
        self.CommonBox.addWidget(self.CommonTitile, 0, 0, 1, 2)
        self.PicBox = QtWidgets.QVBoxLayout()
        self.PicBox.setObjectName("PicBox")
        self.PicTitle = SubtitleLabel(Vdown)
        self.PicTitle.setMaximumSize(QtCore.QSize(16777215, 25))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(15)
        font.setBold(True)
        self.PicTitle.setFont(font)
        self.PicTitle.setObjectName("PicTitle")
        self.PicBox.addWidget(self.PicTitle)
        self.PicCard = SimpleCardWidget(Vdown)
        self.PicCard.setMinimumSize(QtCore.QSize(380, 250))
        self.PicCard.setMaximumSize(QtCore.QSize(380, 250))
        self.PicCard.setObjectName("PicCard")
        self.gridLayout_4 = QtWidgets.QGridLayout(self.PicCard)
        self.gridLayout_4.setContentsMargins(16, 16, 16, 16)
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        self.StrongBodyLabel_8=StrongBodyLabel(self.PicCard)
        self.StrongBodyLabel_8.setObjectName("StrongBodyLabel8")
        self.verticalLayout.addWidget(self.StrongBodyLabel_8)
        self.LineEdit = LineEdit(self.PicCard)
        self.LineEdit.setObjectName("LineEdit")
        self.verticalLayout.addWidget(self.LineEdit)
        self.StrongBodyLabel_9=StrongBodyLabel(self.PicCard)
        self.StrongBodyLabel_9.setObjectName("StrongBodyLabel9")
        self.verticalLayout.addWidget(self.StrongBodyLabel_9)
        self.LineEdit_3 = LineEdit(self.PicCard)
        self.LineEdit_3.setObjectName("LineEdit_3")
        self.verticalLayout.addWidget(self.LineEdit_3)
        self.PrimaryPushButton_2 = PrimaryPushButton(self.PicCard)
        self.PrimaryPushButton_2.setObjectName("PrimaryPushButton_2")
        self.verticalLayout.addWidget(self.PrimaryPushButton_2)
        self.StrongBodyLabel_4 = StrongBodyLabel(self.PicCard)
        self.StrongBodyLabel_4.setMaximumSize(QtCore.QSize(16777215, 40))
        self.StrongBodyLabel_4.setObjectName("StrongBodyLabel_4")
        self.verticalLayout.addWidget(self.StrongBodyLabel_4)
        self.gridLayout_4.addLayout(self.verticalLayout, 0, 0, 1, 1)
        self.PicBox.addWidget(self.PicCard)
        self.CommonBox.addLayout(self.PicBox, 3, 0, 1, 1)
        self.gridLayout_13.addLayout(self.CommonBox, 0, 1, 1, 1)

        self.retranslateUi(Vdown)
        self.PrimaryPushButton_3.clicked.connect(self.ftpdl)
        self.ComboBox_2.addItem("Bilibili")
        self.ComboBox_2.addItem("Douyin")

        self.SearchLineEdit_2.searchButton.clicked.connect(self.getlink)
        self.PrimaryPushButton_5.clicked.connect(self.dlvd)
        self.PrimaryPushButton.clicked.connect(self.get123)
        self.PrimaryPushButton_2.clicked.connect(self.getlan)
        QtCore.QMetaObject.connectSlotsByName(Vdown)
    def get123(self):
        purl=self.LineEdit_2.text()
        ppass = self.LineEdit_4.text()
        print(self.LineEdit_2.text())
        if purl!="":
            print("{"+requests.get("https://api.lolimi.cn/API/123pan-main/?url=" + purl + "&" + ppass).text.split("{")[1])
            dic2 = json.loads("{"+requests.get("https://api.lolimi.cn/API/123pan-main/?url=" + purl + "&" + ppass).text.split("{")[1])
            if dic2["info"] != "获取下载地址失败":
                w = MessageBox(
                    '提示',
                    '解析成功',
                    self
                )
                w.yesButton.setText('确定')
                w.cancelButton.setText('取消')
                if w.exec():
                    pass
                self.StrongBodyLabel_4.setText(dic2["info"])
            else:
                w = MessageBox(
                    '提示',
                    '获取失败,请输入正确的链接',
                    self
                )
                w.yesButton.setText('确定')
                w.cancelButton.setText('取消')
                if w.exec():
                    pass
        else:
            w = MessageBox(
                '提示',
                '请输入链接',
                self
            )
            w.yesButton.setText('确定')
            w.cancelButton.setText('取消')
            if w.exec():
                pass
    def getlan(self):
        purl = self.LineEdit.text()
        ppass=self.LineEdit_3.text()
        print(self.LineEdit.text())
        if purl != "":
            dic2=json.loads(requests.get("https://api.lolimi.cn/API/lanzou/?url="+purl+"&"+ppass).text)
            if dic2["msg"]=="解析成功":
                w = MessageBox(
                    '提示',
                    '解析成功',
                    self
                )
                w.yesButton.setText('确定')
                w.cancelButton.setText('取消')
                if w.exec():
                    pass
                self.StrongBodyLabel_4.setText(dic2["downUrl"])
            else:
                w = MessageBox(
                    '提示',
                    '获取失败,请输入正确的链接',
                    self
                )
                w.yesButton.setText('确定')
                w.cancelButton.setText('取消')
                if w.exec():
                    pass
        else:
            w = MessageBox(
                '提示',
                '请输入链接',
                self
            )
            w.yesButton.setText('确定')
            w.cancelButton.setText('取消')
            if w.exec():
                pass
    def getlink(self):
        if self.SearchLineEdit_2.text()!="":
            vurl=self.SearchLineEdit_2.text()
            if self.ComboBox_2.currentText()=="Bilibili":
                print(self.SearchLineEdit_2.text()+" | bv")
                headers = {
                    'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.132 Safari/537.36 QIHU 360SE'
                }
                global dic1
                dic1 = json.loads(requests.get("https://api.aag.moe/api/bzspjx?url=" + vurl,headers=headers).text)
                print(dic1)
                if dic1["code"]=="0":
                    w = MessageBox(
                        '提示',
                        '获取成功',
                        self
                    )
                    w.yesButton.setText('确定')
                    w.cancelButton.setText('取消')
                    if w.exec():
                        pass
                    self.StrongBodyLabel_7.setText(dic1["title"])
                    global flag
                    flag=1
                else:
                    w = MessageBox(
                        '提示',
                        '获取失败',
                        self
                    )
                    w.yesButton.setText('确定')
                    w.cancelButton.setText('取消')
                    if w.exec():
                        pass

            else:
                print(self.SearchLineEdit_2.text() + " | dy")
                headers = {
                    'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.132 Safari/537.36 QIHU 360SE'
                }

                dic1 = json.loads(requests.get("https://api.aag.moe/api/dywsyjx?url=" + vurl, headers=headers).text)
                print(dic1)
                if dic1["code"] == "0":
                    w = MessageBox(
                        '提示',
                        '获取成功',
                        self
                    )
                    w.yesButton.setText('确定')
                    w.cancelButton.setText('取消')
                    if w.exec():
                        pass
                    self.StrongBodyLabel_7.setText(dic1["title"])
                    flag = 1
                else:
                    w = MessageBox(
                        '提示',
                        '获取失败',
                        self
                    )
                    w.yesButton.setText('确定')
                    w.cancelButton.setText('取消')
                    if w.exec():
                        pass

        else:
            w = MessageBox(
                '提示',
                '请输入链接',
                self
            )
            w.yesButton.setText('确定')
            w.cancelButton.setText('取消')

            if w.exec():
                pass

    def dlvd(self):
        if flag==1:
            w = MessageBox(
                '提示',
                '点击确认/取消开始下载 中途即使未响应也请勿关闭 下载完毕会有提示',
                self
            )
            w.yesButton.setText('确定')
            w.cancelButton.setText('取消')

            if w.exec():
                pass
            headers = {
                'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.132 Safari/537.36 QIHU 360SE'
            }
            vdat = requests.get(dic1["url"], headers=headers).content
            vtitle = dic1["title"]

            with open(vtitle + ".mp4", mode="wb") as f:
                f.write(vdat)
            w = MessageBox(
                '提示',
                '下载成功',
                self
            )
            w.yesButton.setText('确定')
            w.cancelButton.setText('取消')

            if w.exec():
                pass
        else:
            w = MessageBox(
                '提示',
                '请先获取信息',
                self
            )
            w.yesButton.setText('确定')
            w.cancelButton.setText('取消')

            if w.exec():
                pass
    async def bilibili(self,url):
        async with DownloaderBilibili() as d:
            await d.get_video(url)
    async def hanime1(self,url):
        async with DownloaderHanime1() as d:
            await d.get_video(url)
    async def youtube(self,url):
        async with DownloaderYoutube() as d:
            await d.get_video(url)
    def ftp_connect(self,host, port, username, password):
        ftp = FTP()
        # ftp.set_debuglevel(2)
        ftp.connect(host, port)
        ftp.login(username, password)
        # ftp.set_pasv(False)
        return ftp

    def download_file(self,ftp, remotepath, localpath):
        bufsize = 1024
        fp = open(localpath, 'wb')
        ftp.retrbinary('RETR ' + remotepath, fp.write, bufsize)
        ftp.set_debuglevel(0)
        fp.close()

    def ftpdl(self):
        w = MessageBox(
            '提示',
            '点击确认/取消开始下载 中途即使未响应也请勿关闭',
            self
        )
        w.yesButton.setText('确定')
        w.cancelButton.setText('取消')

        if w.exec():
            pass
        host = "154.7.180.249"
        port = 21
        username = "rich"
        password = "rich9999"
        ftp = self.ftp_connect(host, port, username, password)
        self.download_file(ftp, r"ffmpeg.exe", r"ffmpeg.exe")
        w = MessageBox(
            '提示',
            '下载成功',
            self
        )
        w.yesButton.setText('确定')
        w.cancelButton.setText('取消')

        if w.exec():
            pass
    def retranslateUi(self, Vdown):
        _translate = QtCore.QCoreApplication.translate
        Vdown.setWindowTitle(_translate("Common", "Form"))
        self.AudioParmsTitle.setText(_translate("Common", "123云盘直链解析"))
        self.PrimaryPushButton.setText(_translate("Common", "获取直链"))
        self.StrongBodyLabel_5.setText(_translate("Common", "请先点击获取直链"))
        self.StrongBodyLabel.setText(_translate("Common", "视频标题"))
        self.PrimaryPushButton_3.setText(_translate("Common", "点我下载ffmpeg"))
        self.StrongBodyLabel_2.setText(_translate("Common", "请选择平台"))
        self.StrongBodyLabel_3.setText(_translate("Common", "输入平台视频链接"))
        self.VideoClipLabel.setText(_translate("Common", "视频下载"))
        self.CommonTitile.setText(_translate("Common", "Video Download"))
        self.PicTitle.setText(_translate("Common", "蓝奏云盘直链解析"))
        self.PrimaryPushButton_2.setText(_translate("Common", "获取直链"))
        self.StrongBodyLabel_4.setText(_translate("Common", "请先点击获取直链"))
        self.StrongBodyLabel_6.setText(_translate("Common", "第一次使用请先下载ffmpeg"))
        self.PrimaryPushButton_5.setText(_translate("Common", "下载视频"))
        self.StrongBodyLabel_7.setText(_translate("Common", "请先搜寻视频"))
        self.StrongBodyLabel_8.setText(_translate("Common", "链接输入"))
        self.StrongBodyLabel_9.setText(_translate("Common", "密码输入"))
        self.StrongBodyLabel_11.setText(_translate("Common", "链接输入"))
        self.StrongBodyLabel_10.setText(_translate("Common", "密码输入"))

from qfluentwidgets import ComboBox, LargeTitleLabel, LineEdit, PrimaryPushButton, SearchLineEdit, SimpleCardWidget, \
    StrongBodyLabel, SubtitleLabel, MessageBox
